module.exports = '\nprecision highp float;\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\nuniform float u_strokeWidth;\nuniform vec4 u_stroke;\nuniform float u_opacity;\nuniform sampler2D u_texture;\n\nvarying vec2 v_rs;\nvarying vec2 v_uv;\nvarying vec4 v_color;\nvarying float v_shape;\n\nconst float u_buffer = 0.75;\n// const float u_gamma = 2.0 * 1.4142 / 10.0;\nconst float u_gamma = 0.08;\n// const float u_scale = 128.0;\nconst vec3 halo = vec3( 1.0 ); \n\nvoid main() {\n    // 纹理坐标\n    #ifdef TEXCOORD_0\n    vec2 pos =  v_uv + gl_PointCoord / 512.0 * 64.0;\n    pos.y = 1.0 - pos.y;\n    vec4 textureColor = texture2D(u_texture, pos);\n    gl_FragColor =textureColor;\n    return;\n    #endif\n     if(v_color.a == 0.)\n      discard;\n    vec4 pcolor = v_color * u_opacity;\n    float ro = v_rs.x;\n    float ri = v_rs.y;\n    float d = 0.0;\n    if(ro < 3.0) {\n      gl_FragColor = pcolor;\n      return;\n    }\n\n    // vec4 textureColor = texture2D(u_texture, gl_PointCoord);\n    vec2 st = gl_PointCoord * 2. - 1.;\n    float a = atan(st.x,st.y)+PI ;\n    float r = TWO_PI/ v_shape;\n    float ratio =1.0 + (1.1 - smoothstep(2.8, 6.0,v_shape));\n    float dis2center = cos(floor(.5+a/r)*r-a)*length(st) * ro * ratio;\n    float alpha = smoothstep(ro,ro+0.1, dis2center);\n    \n    if(alpha == 1.) {\n      discard;\n    }\n    if(u_strokeWidth > 0.0){//有border\n        if(dis2center> ro- u_strokeWidth ){\n            gl_FragColor = vec4(u_stroke.xyz,u_stroke.a*(ro- dis2center));\n            return;\n        }else if(dis2center>ri){\n            gl_FragColor= u_stroke * alpha ;\n            return;\n        }\n    }\n\n    if(dis2center > ri- u_strokeWidth){\n        float factor = ri-dis2center;//填充色的百分比\n        if (u_strokeWidth == 0.0) {\n            float a = pcolor.a*factor;\n            gl_FragColor = vec4(pcolor.rgb, a);\n        } else {\n            float a = u_stroke.a*(1.0-factor) +pcolor.a*factor;\n            gl_FragColor = vec4(u_stroke.rgb * (1.0-factor) + pcolor.rgb * factor, a);\n        }\n        } else{\n            gl_FragColor= pcolor;\n        }\n    gl_FragColor *= u_opacity;\n}\n\n';